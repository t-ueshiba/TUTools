#.rst:
# FindTULibs
# -------
#
# Find TULibs installation
#
# Try to find TULibs on UNIX systems. The following values are defined
#
# ::
#
#   TULIBS_FOUND         - True if TULibs is available
#   TULIBS_INCLUDE_DIRS  - include directories to use TULibs
#
# and also the following more fine grained variables:
#
# ::
#
#   TUTOOLS_INCLUDE_PATH,	TUTOOLS_LIB,	TUTOOLS_FOUND
#   TUV_INCLUDE_PATH,		TUV_LIB,	TUV_FOUND
#   TUIIDC_INCLUDE_PATH,	TUIIDC_LIB,	TUIIDC_FOUND
#   TUV4L2_INCLUDE_PATH,	TUV4L2_LIB,	TUV4L2_FOUND
#   TUVIIDC_INCLUDE_PATH,	TUVIIDC_LIB,	TUVIIDC_FOUND
#   TUVV4L2_INCLUDE_PATH,	TUVV4L2_LIB,	TUVV4L2_FOUND
#   TUCUDA_INCLUDE_PATH,	TUCUDA_LIB,	TUCUDA_FOUND

if (UNIX)
  set(TULIBS_INC_SEARCH_PATH
      /usr/include
      /usr/local/include
      /usr/local/openrtp/include)

  set(TULIBS_LIB_SEARCH_PATH
      /usr/lib
      /usr/local/lib
      /usr/local/openrtp/lib)

  set(TULIBS_INCLUDE_DIRS)

  find_path(TUTOOLS_INCLUDE_PATH TU/algorithm.h ${TULIBS_INC_SEARCH_PATH})
  find_library(TUTOOLS_LIB	   TUTools	${TULIBS_LIB_SEARCH_PATH})

  if(TUTOOLS_LIB AND TUTOOLS_INCLUDE_PATH)
    set(TUTOOLS_FOUND TRUE)
    set(TULIBS_INCLUDE_DIRS ${TULIBS_INCLUDE_DIRS} ${TUTOOLS_INCLUDE_PATH})
  endif()

  find_path(TUV_INCLUDE_PATH	TU/v/TUv++.h	${TULIBS_INC_SEARCH_PATH})
  find_library(TUV_LIB	TUv			${TULIBS_LIB_SEARCH_PATH})

  if(TUV_LIB AND TUV_INCLUDE_PATH)
    set(TUV_FOUND TRUE)
    set(TULIBS_INCLUDE_DIRS ${TULIBS_INCLUDE_DIRS} ${TUV_INCLUDE_PATH})
  endif()

  find_path(TUIIDC_INCLUDE_PATH TU/IIDC++.h	${TULIBS_INC_SEARCH_PATH})
  find_library(TUIIDC_LIB	  TUIIDC	${TULIBS_LIB_SEARCH_PATH})

  if(TUIIDC_LIB AND TUIIDC_INCLUDE_PATH)
    set(TUIIDC_FOUND TRUE)
    set(TULIBS_INCLUDE_DIRS ${TULIBS_INCLUDE_DIRS} ${TUIIDC_INCLUDE_PATH})
  endif()

  find_path(TUV4L2_INCLUDE_PATH TU/V4L2++.h	${TULIBS_INC_SEARCH_PATH})
  find_library(TUV4L2_LIB	  TUV4L2	${TULIBS_LIB_SEARCH_PATH})

  if(TUV4L2_LIB AND TUV4L2_INCLUDE_PATH)
    set(TUV4L2_FOUND TRUE)
    set(TULIBS_INCLUDE_DIRS ${TULIBS_INCLUDE_DIRS} ${TUV4L2_INCLUDE_PATH})
  endif()

  find_path(TUVIIDC_INCLUDE_PATH TU/v/vIIDC++.h	${TULIBS_INC_SEARCH_PATH})
  find_library(TUVIIDC_LIB	   TUvIIDC	${TULIBS_LIB_SEARCH_PATH})

  if(TUVIIDC_LIB AND TUVIIDC_INCLUDE_PATH)
    set(TUVIIDC_FOUND TRUE)
    set(TULIBS_INCLUDE_DIRS ${TULIBS_INCLUDE_DIRS} ${TUVIIDC_INCLUDE_PATH})
  endif()

  find_path(TUVV4L2_INCLUDE_PATH TU/v/vV4L2++.h  ${TULIBS_INC_SEARCH_PATH})
  find_library(TUVV4L2_LIB	   TUvV4L2	 ${TULIBS_LIB_SEARCH_PATH})

  if(TUVV4L2_LIB AND TUVV4L2_INCLUDE_PATH)
    set(TUVV4L2_FOUND TRUE)
    set(TULIBS_INCLUDE_DIRS ${TULIBS_INCLUDE_DIRS} ${TUVV4L2_INCLUDE_PATH})
  endif()

  find_path(TUCUDA_INCLUDE_PATH TU/cuda/Array++.h ${TULIBS_INC_SEARCH_PATH})
  find_library(TUCUDA_LIB	  TUCuda	  ${TULIBS_LIB_SEARCH_PATH})

  if(TUCUDA_LIB AND TUCUDA_INCLUDE_PATH)
    set(TUCUDA_FOUND TRUE)
    set(TULIBS_INCLUDE_DIRS ${TULIBS_INCLUDE_DIRS} ${TUCUDA_INCLUDE_PATH})
  endif()

  if(TULIBS_INCLUDE_DIRS)
    list(REMOVE_DUPLICATES TULIBS_INCLUDE_DIRS)
  endif()

  if(TUTOOLS_FOUND)
    set(TULIBS_FOUND)
  endif()

  if(NOT TULIBS_FOUND)
    if(TULIBS_FIND_REQUIRED)
      message(FATAL_ERROR "Could not find TULibs")
    endif()
  endif()
endif ()
